server:
  port: 8080

spring:
  application:
    name: student-helper-bot
  
  # Database configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/studentbot
    username: studentbot
    password: studentbot123
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      
  # JPA configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
  
  # Jackson configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    default-property-inclusion: NON_NULL

# Telegram Bot Configuration
telegram:
  bot:
    token: ${TELEGRAM_BOT_TOKEN}
    username: ${TELEGRAM_BOT_USERNAME}

# MinIO Configuration
minio:
  url: ${MINIO_URL:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:minioadmin}
  secret-key: ${MINIO_SECRET_KEY:minioadmin123}
  buckets:
    books: books
    documents: documents

# AI Service Configuration
ai:
  service:
    url: ${AI_SERVICE_URL:http://localhost:8000}
    timeout: 30000
    max-tokens: 2000
    temperature: 0.7

# Logging configuration
logging:
  level:
    com.example.studentbot: INFO
    org.springframework: INFO
    org.hibernate: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/student-bot.log
    max-size: 10MB
    max-history: 7

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized